x = Sepal.Length ~ Species + Petal.Length + Sepal.Width:Species
x
names(x)
attributes(x)
terms(x)
terms(Sepal.Length ~ Petal.Length + Sepal.Width:Species | Species)
attr(terms(x), 'term.labels')
?factor
is.factor(iris)
is.factor(iris$Sepal.Length)
is.factor(iris$Species)
column = "Species"
is.factor(iris[column])
iris[column]
is.factor(iris[column])
is.factor(iris[, column])
is.factor(iris[, "xxx"])
levels(iris[, column])
levels(iris[column])
class(iris[column])
rbind(iris, data.frame())
rbind(iris, data.frame(test=3))
?data.frame
?I
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
(d <- data.frame(x = 1, y = 1:10, fac = fac))
## The "same" with automatic column names:
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
is.data.frame(d)
(dd <- cbind(d, char = I(letters[1:10])))
rbind(class = sapply(dd, class), mode = sapply(dd, mode))
x = iris[F, ]
x
x$Sepal.Length = 1
as.formula("test")
as.formula("test ~ .")
terms(as.formula("test ~ ."))
terms(as.formula("test ~ "))
terms(as.formula(". ~ test"))
add.hyper.column.factor("Species", 5, data=iris)
add.hyper.column.factor("Species", 5, data=iris)
Sys.setenv(MAKEFLAGS = "-j2")
source('http://mc-stan.org/rstan/install.R', echo = TRUE, max.deparse.length = 2000)
install_rstan()
system('clang++ -v')
R.home("etc")
Sys.setenv(MAKEFLAGS = "-j2")
source('http://mc-stan.org/rstan/install.R', echo = TRUE, max.deparse.length = 2000)
install_rstan()
prices <- read.csv("prices.csv")
prices2 <- read.csv("prices2.csv")
setwd("~/projects/water/fivecounties")
prices <- read.csv("prices.csv")
prices2 <- read.csv("prices2.csv")
prices1 <- read.csv("prices1.csv")
prices2 <- read.csv("prices.csv")
data <- prices[0,]
data
data <- prices[0,]
for (ii in 1:nrow(prices1)) {
if (prices1$objective[ii] > prices2$objective[ii])
data <- rbind(data, prices1[ii,])
else
data <- rbind(data, prices2[ii,])
}
nrow(data)
ii = 1
betas <- data[ii, c('beta1', 'beta2', 'beta3', 'beta4', 'beta5')]
betas
betas <- as.numeric(data[ii, c('beta1', 'beta2', 'beta3', 'beta4', 'beta5')])
betas
data$betamean <- NA
data$phimean <- NA
data$lambdaAmean <- NA
data$sigmaAmean <- NA
data$lambdaCmean <- NA
data$sigmaCmean <- NA
data$betavar <- NA
data$phivar <- NA
data$lambdaAvar <- NA
data$sigmaAvar <- NA
data$lambdaCvar <- NA
data$sigmaCvar <- NA
for (ii in 1:nrow(data)) {
betas <- as.numeric(data[ii, c('beta1', 'beta2', 'beta3', 'beta4', 'beta5')])
phis <- as.numeric(data[ii, c('phi1', 'phi2', 'phi3', 'phi4', 'phi5')])
lambda_As <- as.numeric(data[ii, c('lambda_A1', 'lambda_A2', 'lambda_A3', 'lambda_A4', 'lambda_A5')])
sigma_As <- as.numeric(data[ii, c('sigma_A1', 'sigma_A2', 'sigma_A3', 'sigma_A4', 'sigma_A5')])
lambda_Cs <- as.numeric(data[ii, c('lambda_C1', 'lambda_C2', 'lambda_C3', 'lambda_C4', 'lambda_C5')])
sigma_Cs <- as.numeric(data[ii, c('sigma_C1', 'sigma_C2', 'sigma_C3', 'sigma_C4', 'sigma_C5')])
data$betamean[ii] <- mean(betas)
data$betavar[ii] <- var(betas)
data$phimean[ii] <- mean(phis)
data$phivar[ii] <- var(phis)
data$lambdaAmean[ii] <- mean(lambda_As)
data$lambdaAvar[ii] <- var(lambda_As)
data$sigmaAmean[ii] <- mean(sigma_As)
data$sigmaAvar[ii] <- var(sigma_As)
data$lambdaCmean[ii] <- mean(lambda_Cs)
data$lambdaCvar[ii] <- var(lambda_Cs)
data$sigmaCmean[ii] <- mean(sigma_Cs)
data$sigmaCvar[ii] <- var(sigma_Cs)
}
data[1,]
head(data)
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean))
library(ggplot2)
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean))
library(ggplot2)
data$rpE <- NA
data$rpE[data$p_E == .1] <- 1
data$rpE[data$p_E == .2] <- 2
data$rpE[data$p_E == .5] <- 3
data$rpE[data$p_E == 1] <- 4
data$rpE[data$p_E == 2] <- 5
data$rpE[data$p_E == 5] <- 6
data$rpE[data$p_E == 10] <- 7
data$rpF <- NA
data$rpF[data$p_F == .1] <- 1
data$rpF[data$p_F == .2] <- 2
data$rpF[data$p_F == .5] <- 3
data$rpF[data$p_F == 1] <- 4
data$rpF[data$p_F == 2] <- 5
data$rpF[data$p_F == 5] <- 6
data$rpF[data$p_F == 10] <- 7
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=betamean))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=betavar))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=phimean))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=phivar))
data$phimean
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=lambdaAmean))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=lambdaAvar))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=lambdaAmean))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=lambdaAvar))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=sigmaAmean))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=sigmaAvar))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=lambdaCmean))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=lambdaCvar))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=lambdaCmean))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=sigmaCmean))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=sigmaCvar))
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=objective))
quantile(data$objective)
data2 <- data[data$objective > 0,]
ggplot(data2, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=objective))
data2
data2 <- data[data$objective > -1e6,]
ggplot(data2, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=objective))
ddata
data2
data2 <- data[data$objective > -1e9,]
ggplot(data2, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=objective))
data
ggplot(data, aes(x=rpE, y=rpF)) +
geom_tile(aes(fill=betamean))
prices <- read.csv("prices.csv")
data$betamean <- NA
data$phimean <- NA
data$lambdaAmean <- NA
data$sigmaAmean <- NA
data$lambdaCmean <- NA
data$sigmaCmean <- NA
data$betavar <- NA
data$phivar <- NA
data$lambdaAvar <- NA
data$sigmaAvar <- NA
data$lambdaCvar <- NA
data$sigmaCvar <- NA
for (ii in 1:nrow(data)) {
betas <- as.numeric(data[ii, c('beta1', 'beta2', 'beta3', 'beta4', 'beta5')])
phis <- as.numeric(data[ii, c('phi1', 'phi2', 'phi3', 'phi4', 'phi5')])
lambda_As <- as.numeric(data[ii, c('lambda_A1', 'lambda_A2', 'lambda_A3', 'lambda_A4', 'lambda_A5')])
sigma_As <- as.numeric(data[ii, c('sigma_A1', 'sigma_A2', 'sigma_A3', 'sigma_A4', 'sigma_A5')])
lambda_Cs <- as.numeric(data[ii, c('lambda_C1', 'lambda_C2', 'lambda_C3', 'lambda_C4', 'lambda_C5')])
sigma_Cs <- as.numeric(data[ii, c('sigma_C1', 'sigma_C2', 'sigma_C3', 'sigma_C4', 'sigma_C5')])
data$betamean[ii] <- mean(betas)
data$betavar[ii] <- var(betas)
data$phimean[ii] <- mean(phis)
data$phivar[ii] <- var(phis)
data$lambdaAmean[ii] <- mean(lambda_As)
data$lambdaAvar[ii] <- var(lambda_As)
data$sigmaAmean[ii] <- mean(sigma_As)
data$sigmaAvar[ii] <- var(sigma_As)
data$lambdaCmean[ii] <- mean(lambda_Cs)
data$lambdaCvar[ii] <- var(lambda_Cs)
data$sigmaCmean[ii] <- mean(sigma_Cs)
data$sigmaCvar[ii] <- var(sigma_Cs)
}
library(ggplot2)
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
data <- read.csv("prices.csv")
data$betamean <- NA
data$phimean <- NA
data$lambdaAmean <- NA
data$sigmaAmean <- NA
data$lambdaCmean <- NA
data$sigmaCmean <- NA
data$betavar <- NA
data$phivar <- NA
data$lambdaAvar <- NA
data$sigmaAvar <- NA
data$lambdaCvar <- NA
data$sigmaCvar <- NA
for (ii in 1:nrow(data)) {
betas <- as.numeric(data[ii, c('beta1', 'beta2', 'beta3', 'beta4', 'beta5')])
phis <- as.numeric(data[ii, c('phi1', 'phi2', 'phi3', 'phi4', 'phi5')])
lambda_As <- as.numeric(data[ii, c('lambda_A1', 'lambda_A2', 'lambda_A3', 'lambda_A4', 'lambda_A5')])
sigma_As <- as.numeric(data[ii, c('sigma_A1', 'sigma_A2', 'sigma_A3', 'sigma_A4', 'sigma_A5')])
lambda_Cs <- as.numeric(data[ii, c('lambda_C1', 'lambda_C2', 'lambda_C3', 'lambda_C4', 'lambda_C5')])
sigma_Cs <- as.numeric(data[ii, c('sigma_C1', 'sigma_C2', 'sigma_C3', 'sigma_C4', 'sigma_C5')])
data$betamean[ii] <- mean(betas)
data$betavar[ii] <- var(betas)
data$phimean[ii] <- mean(phis)
data$phivar[ii] <- var(phis)
data$lambdaAmean[ii] <- mean(lambda_As)
data$lambdaAvar[ii] <- var(lambda_As)
data$sigmaAmean[ii] <- mean(sigma_As)
data$sigmaAvar[ii] <- var(sigma_As)
data$lambdaCmean[ii] <- mean(lambda_Cs)
data$lambdaCvar[ii] <- var(lambda_Cs)
data$sigmaCmean[ii] <- mean(sigma_Cs)
data$sigmaCvar[ii] <- var(sigma_Cs)
}
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betavar)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phimean)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phivar)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaAmean)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaAvar)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=sigmaAmean)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=sigmaAvar)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaCmean)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaCvar)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=sigmaCmean)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=sigmaCvar)) +
scale_x_log10() + scale_y_log10()
ggplot(data, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
quantile(data$objective)
quantile(data$objective, probs=(.01, .99))
quantile(data$objective, probs=c(.01, .99))
quantile(data$objective, probs=c(.05, .99))
quantile(data$objective, probs=c(.01, .99))
limits <- quantile(data$objective, probs=c(.01, .99))
limits[1]
data2 <- data[data$objective > limits[1] & data$objective < limits[2],]
nrow(data2)
nrow(data)
data2 <- data[data$objective > limits[1] & data$objective < limits[2],]
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean)) +
scale_x_log10() + scale_y_log10()
data2 <- data[data$objective > limits[1] & data$objective < limits[2],]
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
data2 <- data[data$objective < 0,]
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
data2 <- data[data$objective > 0,]
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
data2 <- data[data$objective > limits[1] & data$objective < limits[2],]
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betavar)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phimean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phivar)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaAmean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaAvar)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaAmean)) +
scale_x_log10() + scale_y_log10()
data$betamean <- NA
data$phimean <- NA
data$lambdaAmean <- NA
data$sigmaAmean <- NA
data$lambdaCmean <- NA
data$sigmaCmean <- NA
data$betavar <- NA
data$phivar <- NA
data$lambdaAvar <- NA
data$sigmaAvar <- NA
data$lambdaCvar <- NA
data$sigmaCvar <- NA
for (ii in 1:nrow(data)) {
betas <- as.numeric(data[ii, c('beta1', 'beta2', 'beta3', 'beta4', 'beta5')])
phis <- as.numeric(data[ii, c('phi1', 'phi2', 'phi3', 'phi4', 'phi5')])
lambda_As <- as.numeric(data[ii, c('lambda_A1', 'lambda_A2', 'lambda_A3', 'lambda_A4', 'lambda_A5')])
sigma_As <- as.numeric(data[ii, c('sigma_A1', 'sigma_A2', 'sigma_A3', 'sigma_A4', 'sigma_A5')])
lambda_Cs <- as.numeric(data[ii, c('lambda_C1', 'lambda_C2', 'lambda_C3', 'lambda_C4', 'lambda_C5')])
sigma_Cs <- as.numeric(data[ii, c('sigma_C1', 'sigma_C2', 'sigma_C3', 'sigma_C4', 'sigma_C5')])
data$betamean[ii] <- mean(betas)
data$betansd[ii] <- sd(betas) / mean(betas)
data$phimean[ii] <- mean(phis)
data$phinsd[ii] <- sd(phis) / mean(phis)
data$lambdaAmean[ii] <- mean(lambda_As)
data$lambdaAnsd[ii] <- sd(lambda_As) / mean(lambda_As)
data$sigmaAmean[ii] <- mean(sigma_As)
data$sigmaAnsd[ii] <- sd(sigma_As) / mean(sigma_As)
data$lambdaCmean[ii] <- mean(lambda_Cs)
data$lambdaCnsd[ii] <- sd(lambda_Cs) / mean(lambda_Cs)
data$sigmaCmean[ii] <- mean(sigma_Cs)
data$sigmaCnsd[ii] <- sd(sigma_Cs) / mean(sigma_Cs)
}
limits <- quantile(data$objective, probs=c(.01, .99))
data2 <- data[data$objective > limits[1] & data$objective < limits[2],]
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betansd)) +
scale_x_log10() + scale_y_log10()
?ifelse
for (ii in 1:nrow(data)) {
betas <- as.numeric(data[ii, c('beta1', 'beta2', 'beta3', 'beta4', 'beta5')])
phis <- as.numeric(data[ii, c('phi1', 'phi2', 'phi3', 'phi4', 'phi5')])
lambda_As <- as.numeric(data[ii, c('lambda_A1', 'lambda_A2', 'lambda_A3', 'lambda_A4', 'lambda_A5')])
sigma_As <- as.numeric(data[ii, c('sigma_A1', 'sigma_A2', 'sigma_A3', 'sigma_A4', 'sigma_A5')])
lambda_Cs <- as.numeric(data[ii, c('lambda_C1', 'lambda_C2', 'lambda_C3', 'lambda_C4', 'lambda_C5')])
sigma_Cs <- as.numeric(data[ii, c('sigma_C1', 'sigma_C2', 'sigma_C3', 'sigma_C4', 'sigma_C5')])
data$betamean[ii] <- mean(betas)
data$betansd[ii] <- ifelse(mean(betas) == 0, 0, sd(betas) / mean(betas))
data$phimean[ii] <- mean(phis)
data$phinsd[ii] <- ifelse(mean(phis) == 0, 0, sd(phis) / mean(phis))
data$lambdaAmean[ii] <- mean(lambda_As)
data$lambdaAnsd[ii] <- ifelse(mean(lambda_As) == 0, 0, sd(lambda_As) / mean(lambda_As))
data$sigmaAmean[ii] <- mean(sigma_As)
data$sigmaAnsd[ii] <- ifelse(mean(sigma_As) == 0, 0, sd(sigma_As) / mean(sigma_As))
data$lambdaCmean[ii] <- mean(lambda_Cs)
data$lambdaCnsd[ii] <- ifelse(mean(lambda_Cs) == 0, 0, sd(lambda_Cs) / mean(lambda_Cs))
data$sigmaCmean[ii] <- mean(sigma_Cs)
data$sigmaCnsd[ii] <- ifelse(mean(sigma_Cs) == 0, 0, sd(sigma_Cs) / mean(sigma_Cs))
}
limits <- quantile(data$objective, probs=c(.01, .99))
data2 <- data[data$objective > limits[1] & data$objective < limits[2],]
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betansd)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phimean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phinsd)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phimean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phinsd)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaAmean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaAnsd)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=sigmaAmean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=sigmaAnsd)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaCmean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaCnsd)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=sigmaCmean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=sigmaCnsd)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=objective)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0))
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean)) +
scale_x_log10() + scale_y_log10()
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0))
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food")
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food") +
ggtitle("Mean fraction of agriculture for biofuel")
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betansd)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food") +
ggtitle("Variation in fraction of agriculture for biofuel")
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phimean)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food") +
ggtitle("Mean fuel purchased annually")
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phinsd)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food") +
ggtitle("Variation in fuel purchased annually")
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betansd)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food") +
ggtitle("Variation in fraction of agriculture for biofuel")
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaAmean)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0))
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=lambdaAmean)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food") +
ggtitle("Mean water to agriculture")
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=phinsd)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food") +
ggtitle("Variation in fuel purchased annually")
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betansd)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food") +
ggtitle("Variation in fraction of agriculture for biofuel")
ggplot(data2, aes(x=p_E, y=p_F)) +
geom_tile(aes(fill=betamean)) +
scale_x_log10(expand=c(0, 0)) + scale_y_log10(expand=c(0, 0)) +
xlab("Price of Fuel") + ylab("Price of Food") +
ggtitle("Mean fraction of agriculture for biofuel")
